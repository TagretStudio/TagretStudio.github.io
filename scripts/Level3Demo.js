define(["Images","LummingFactory","VisibleLummingFactory","ColorEnum","MusicFactory","PlatformFactory","DoorsFactory","MenuFactoryTest","VisionEnum","Transition","FilterFactory","RadioLummingFactory","ItemsLevel","MiroirFactory"],function(e,t,o,a,n,i,r,u,d,l,c,s,m,p){function g(e,t){if(2==e.getDefautVision()){var o=e.collideWithDoor(t);1==o&&(F+=1,text.setText(F+"/"+h))}}function f(){D.add.sprite(0,0,"transitionBackground"),D.add.sprite(184,265,"logo");null!=C&&(C.getMusic().fadeOut(700),C.getMusic().onFadeComplete.dispatch(),C.getMusic().onFadeComplete.addOnce(function(){C=null,D.state.start("Level3Demo")},D))}function y(){D.add.sprite(0,0,"transitionBackground"),D.add.sprite(184,265,"logo");null!=C&&(C.getMusic().fadeOut(700),C.getMusic().onFadeComplete.dispatch(),C.getMusic().onFadeComplete.addOnce(function(){C=null,D.state.start("MainMenu")},D))}var D,h=0,F=0,b=null,E=null,v=null,C=null,M=null,L=null,I={preload:function(){C=n.create("level1","media/audio/Level 1.ogg"),D.load.image("buttonDiamond","media/img/menuButton.png"),D.load.image("buttonRefresh","media/img/refresh.png"),D.load.image("cliquez","media/img/cliquezPourCommencer.png"),u.init(D),i.init(D),o.init(D)},create:function(){F=0,C.play(),e.boot().create(),D.physics.startSystem(Phaser.Physics.ARCADE),L=d.getVisionEnum().VISIBLE,E=D.add.group(),E.enableBody=!0,platform1=i.create(0,300,!1),platform2=i.create(300,300,!1),E.add(platform1),E.add(platform2),_groupDoors=D.add.group(),_groupDoors.enableBody=!0,door2=r.create(a.getColorEnum().CYAN,600,270),_groupDoors.add(door2),v=D.add.group(),lum1=o.create(a.getColorEnum().WHITE,20,200,50),lum2=o.create(a.getColorEnum().RED,50,200,50),v.add(lum1),v.add(lum2),h=1,text=D.add.text(750,0,F+"/"+h,{align:"center"}),button_menu=D.add.button(32,0,"buttonDiamond",y,D),button_restart=D.add.button(650,0,"buttonRefresh",f,D),M=u.create(),m.reinit(D);var t=this.add.sprite(100,300,"cliquez");t.scale.set(.7,.7),D.input.onDown.add(function(){D.paused&&(D.paused=!1,t.destroy())},D),D.paused=!0},update:function(){M.update(),D.physics.arcade.collide(v,E),D.physics.arcade.overlap(v,_groupDoors,g,null,D),D.physics.arcade.overlap(v,m.getGroupItem(),m.collideItem,null,D),v.forEach(function(e){e.update(L)}),_groupDoors.forEach(function(e){e.update()}),h==F&&l.nextState("Level4Demo",C)}};return{init:function(e,t){D=e,b=t},getLevel3Demo:function(){return I}}});